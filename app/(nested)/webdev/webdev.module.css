@import "tailwindcss/theme" theme(reference);

.root {
	--web-time: 0.5s;
	--border-transition-time: 0.2s;
	--border-thickness: 4px;
	--length: min(min(100vh, 100vw), calc(128px + 400px));
	--web-spacing: 96px;
	--def-left: calc(100vw - var(--length) - var(--web-spacing));

	--link-angle: 18deg;

	@media (width < theme(--breakpoint-lg)) {
		--length: min(min(100vh, 100vw), calc(128px + 250px));
		--web-spacing: 64px;
	}

	@media (prefers-reduced-motion) {
		--web-time: 0s;
	}
}

.square {
	width: var(--length);
	height: var(--length);

	position: absolute;
	top: calc(50% - var(--length) / 2);

	left: var(--def-left);
	transition:
		left var(--web-time),
		opacity var(--web-time);

	--extension: 50px;
	--box-angle: 28deg;

	:global(.main:not(.open)) & {
		opacity: 0;
	}

	@media (width < theme(--breakpoint-lg)) {
		--extension: 25px;
		--box-angle: 32deg;
	}

	@media (width < theme(--breakpoint-md)) {
		top: calc((var(--length) * -1 / 2) + 120px + 40px + 56px);
		left: calc((var(--length) * -1 / 2) + 40px + 56px);
	}
}

.up_right,
.down_right {
	--b-len: calc(var(--length) / 2 + var(--extension));
	width: var(--b-len);
	height: var(--b-len);

	position: absolute;

	transition:
		transform var(--web-time),
		background var(--transition-time),
		border-top var(--border-transition-time),
		border-bottom var(--border-transition-time),
		border-left var(--border-transition-time);
}

.up_right {
	bottom: 50%;
	left: 50%;

	transform-origin: bottom left;

	:global(.main.open) & {
		transform: rotate(
			calc(
				var(--box-angle) * -1 + var(--compensation, 0) *
					var(--link-angle)
			)
		);

		border-left: var(--border-thickness) solid white;
		border-bottom: var(--border-thickness) solid white;
		box-shadow: black 0px 25px 20px -20px;
	}
}

.down_right {
	top: 50%;
	left: 50%;

	transform-origin: top left;

	:global(.main.open) & {
		transform: rotate(
			calc(var(--box-angle) + var(--compensation, 0) * var(--link-angle))
		);

		border-left: var(--border-thickness) solid white;
		border-top: var(--border-thickness) solid white;
		box-shadow: black 0px -25px 20px -20px;
	}
}

.up_left,
.down_left {
	--b-len: calc(var(--length) / 2);
	width: var(--b-len);
	height: var(--b-len);

	position: absolute;
	overflow: hidden;

	transition:
		transform var(--web-time),
		background var(--transition-time);

	> svg {
		width: var(--length);
		height: var(--length);
		object-fit: contain;

		position: relative;
	}

	:global(.main.open) & {
		transform: rotate(calc(var(--compensation, 0) * var(--link-angle)));
	}
}

.up_left {
	bottom: 50%;
	left: 0;

	transform-origin: bottom right;
}

.down_left {
	top: 50%;
	left: 0;

	transform-origin: top right;

	> svg {
		bottom: calc(var(--length) / 2);
	}
}

.up_left,
.down_left,
.up_right,
.down_right {
	background-color: var(--color-base);

	:global(.main:not(.open)) & {
		background-color: var(--color-base-light);
	}
}

.center {
	background-color: var(--color-base);

	:global(.main:not(.open)) & {
		background-color: var(--color-base-light);
	}
}

.web_links_container {
	position: absolute;
	top: 50%;
	left: 50%;

	transition-property: all;
	transition-duration: var(--web-time);

	transform: translate(0, -50%);

	:global(.main:not(.open)) & {
		left: 66.666667%;
		opacity: 0;
	}

	@media (width < theme(--breakpoint-md)) {
		z-index: 20;
	}
}

.web_links {
	height: 40px;
	display: inline-block;
	position: absolute;

	top: calc(50% - 20px);
	left: 0;

	transform-origin: center left;

	transform: rotate(calc(var(--rot-mult, 0) * var(--link-angle)))
		translate(150px, 0px);

	transition: transform var(--web-time);

	@media (width < theme(--breakpoint-lg)) {
		transform: rotate(calc(var(--rot-mult, 0) * var(--link-angle)))
			translate(100px, 0px);
	}
}

.web_dev_container {
	position: absolute;
	top: 50%;
	left: calc(var(--def-left)+var(--length) / 2);

	transition-property: all;
	transition-duration: var(--web-time);

	transform: translate(-50%, -50%);

	@media (width < theme(--breakpoint-md)) {
		/* Copied extra from .square */
		top: calc(120px + 40px + 56px);
		left: calc(40px + 56px);
	}

	:global(.main:not(.open)) & {
		top: 50%;
		left: 50%;
	}
}

.content_container {
	transition: opacity var(--web-time) var(--web-time), width var(--web-time);

	:global(.main:not(.open)) & {
		opacity: 0;
	}
}

.content {
	display: none;
	position: absolute;

	width: 100%;
	height: 100%;
	overflow: auto;
}

@keyframes from_top {
	to {
		top: 0;
		opacity: 1;
	}
}

@keyframes from_bottom {
	to {
		bottom: 0;
		opacity: 1;
	}
}

@keyframes to_top {
	to {
		top: -100px;
		opacity: 0;
		display: none;
	}
}

@keyframes to_bottom {
	to {
		bottom: -100px;
		opacity: 0;
		display: none;
	}
}

.from_top {
	display: block;
	top: -100px;
	opacity: 0;

	animation-name: from_top;
	animation-duration: var(--web-time);
	animation-timing-function: ease;
	animation-delay: var(--web-time);
	animation-fill-mode: forwards;
}

.from_bottom {
	display: block;
	bottom: -100px;
	opacity: 0;

	animation-name: from_bottom;
	animation-duration: var(--web-time);
	animation-timing-function: ease;
	animation-delay: var(--web-time);
	animation-fill-mode: forwards;
}

.to_top {
	display: block;
	top: 0;
	opacity: 1;

	animation-name: to_top;
	animation-duration: var(--web-time);
	animation-timing-function: ease;
	animation-fill-mode: forwards;
}

.to_bottom {
	display: block;
	bottom: 0;
	opacity: 1;

	animation-name: to_bottom;
	animation-duration: var(--web-time);
	animation-timing-function: ease;
	animation-fill-mode: forwards;
}
